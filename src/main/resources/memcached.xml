<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="
  	   http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.3.xsd
           http://www.springframework.org/schema/cache
           http://www.springframework.org/schema/cache/spring-cache-4.3.xsd">

    <cache:annotation-driven />
    <context:component-scan base-package="com.sd2022.club" />
    <context:property-placeholder location="memchached.properties" />
    <bean name="cacheManager" class="com.google.code.ssm.spring.SSMCacheManager">
        <property name="caches">
            <set>
                <bean class="com.google.code.ssm.spring.SSMCache">
                    <constructor-arg name="cache" index="0" ref="defaultCache" />
                    <!-- 5 minutes -->
                    <constructor-arg name="expiration" index="1" value="${cache.server.expiration}" />
                    <!-- @CacheEvict(..., "allEntries" = true) won't work because allowClear is false,
                     so we won't flush accidentally all entries from memcached instance -->
                    <constructor-arg name="allowClear" index="2" value="${cache.server.allowclear}" />
                </bean>
            </set>
        </property>
    </bean>

    <bean name="defaultCache" class="com.google.code.ssm.CacheFactory">
        <property name="cacheName" value="${cache.name}" />
        <property name="cacheClientFactory">
            <bean name="cacheClientFactory" class="com.google.code.ssm.providers.xmemcached.MemcacheClientFactoryImpl" />
        </property>
        <property name="addressProvider">
            <bean class="com.google.code.ssm.config.DefaultAddressProvider">
                <property name="address" value="${cache.server.adress}" />
            </bean>
        </property>
        <property name="configuration">
            <bean class="com.google.code.ssm.providers.CacheConfiguration">
                <property name="consistentHashing" value="${cache.server.consistenthashing}" />
                <!-- spring can produce keys that contain unacceptable characters -->
                <property name="useBinaryProtocol" value="${cache.server.usebinaryprotocol}" />
            </bean>
        </property>
    </bean>
</beans>